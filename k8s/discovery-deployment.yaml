apiVersion: apps/v1
kind: Deployment
metadata:
  name: chimera-discovery
  labels:
    app: chimera-discovery
    component: discovery-service
    layer: "1"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: chimera-discovery
  template:
    metadata:
      labels:
        app: chimera-discovery
        component: discovery-service
        layer: "1"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: discovery
        image: project-chimera/discovery:latest
        ports:
        - containerPort: 8081
          name: http
        - containerPort: 8081
          name: metrics
        env:
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: NATS_URL
          value: "nats://nats-service:4222"
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: chimera-secrets
              key: postgres-url
        - name: SCAN_INTERVAL
          value: "60"
        - name: DATA_RETENTION_HOURS
          value: "24"
        - name: ENABLE_SYSTEM_PROBES
          value: "true"
        - name: ENABLE_NETWORK_PROBES
          value: "true"
        - name: ENABLE_CONTAINER_PROBES
          value: "true"
        - name: RUST_LOG
          value: "info"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: discovery-data
          mountPath: /app/data
        - name: discovery-logs
          mountPath: /app/logs
      volumes:
      - name: discovery-data
        emptyDir: {}
      - name: discovery-logs
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: chimera-discovery-service
  labels:
    app: chimera-discovery
    component: discovery-service
spec:
  selector:
    app: chimera-discovery
  ports:
  - name: http
    port: 80
    targetPort: 8081
  - name: metrics
    port: 9091
    targetPort: 8081
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chimera-discovery-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/rate-limit: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  rules:
  - host: discovery.chimera.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chimera-discovery-service
            port:
              number: 80

---
apiVersion: v1
kind: NetworkPolicy
metadata:
  name: chimera-discovery-netpol
spec:
  podSelector:
    matchLabels:
      app: chimera-discovery
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: chimera-system
    ports:
    - protocol: TCP
      port: 8081
  egress:
  - to: []  # Allow all egress for system monitoring
    ports:
    - protocol: TCP
    - protocol: UDP
    - protocol: ICMP