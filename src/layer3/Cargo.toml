[package]
name = "layer3-validation"
version = "0.1.0"
edition = "2021"
description = "Layer 3 (Validation) - System integrity and safety validation for Project Chimera"
authors = ["Project Chimera Team"]
license = "MIT"
repository = "https://github.com/project-chimera/layer3-validation"

[dependencies]
# Core async runtime
tokio = { version = "1.0", features = ["full"] }
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# HTTP client for cross-layer communication
reqwest = { version = "0.11", features = ["json"] }

# Logging
tracing = "0.1"
tracing-subscriber = "0.3"

# Configuration
config = "0.13"

# Metrics
prometheus = "0.13"

# UUID generation
uuid = { version = "1.0", features = ["v4", "serde"] }

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Validation
validator = { version = "0.16", features = ["derive"] }

# Cryptography for security validation
ring = "0.17"
sha2 = "0.10"
base64 = "0.21"

# Regular expressions for pattern validation
regex = "1.10"

# Layer 2 integration
layer2-planning = { path = "../layer2" }

# Layer 4 integration
chimera-layer4 = { path = "../layer4" }

# Layer 5 integration
chimera-layer5 = { path = "../layer5" }

# Testing
[dev-dependencies]
tempfile = "3.0"
mockall = "0.11"

[features]
default = ["std"]
std = []

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true